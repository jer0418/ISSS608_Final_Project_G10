[
  {
    "objectID": "Project_Proposal.html",
    "href": "Project_Proposal.html",
    "title": "Project_Proposal",
    "section": "",
    "text": "Group 10 \nDING Hong-Yan (01520876), \nKIM Jeounghyun (01496505),  \nLIU, Jeremy Junpeng (01505670) \n\n\nTraffic accidents represent a pressing public health and safety challenge in Thailand, resulting in substantial loss of life, injuries, and economic costs. With over 20,000 road traffic fatalities annually, Thailand ranks among the highest globally for road traffic mortality, according to the World Health Organization. This project is motivated by the urgent need to understand the underlying patterns and causes of these incidents to inform evidence-based interventions. By analyzing a comprehensive dataset of traffic accidents from 2019 to 2022, this study aims to uncover actionable insights that can guide policymakers, traffic authorities, and communities in reducing accident rates and mitigating their devastating impacts.\n\n\n\nThe dataset for this project covers traffic accidents in Thailand from 2019 to 2022, providing a detailed and multifaceted view of incidents across the country. It includes the following key attributes:\n\nTemporal Data: Dates and times of incidents and reports (incident_datetime, report_datetime).\nGeographical Data: Province names in Thai and English (province_th, province_en), along with latitude and longitude coordinates (latitude, longitude)\nAccident Details: Information on vehicle types (vehicle_type), presumed causes (presumed_cause), accident types (accident_type), number of vehicles involved (number_of_vehicles_involved), fatalities (number_of_fatalities), and injuries (number_of_injuries).\nEnvironmental Factors: Weather conditions (weather_condition), road descriptions (road_description), and slope descriptions (slope_description).\nAdministrative Data: Reporting agency (agency) and route details (route).\n\nThis dataset’s breadth and depth make it an invaluable resource for analyzing spatial, temporal, and causal trends in traffic accidents across Thailand.\n\n\n\nThe primary goals of this project are:\n\nTo identify trends and patterns in traffic accidents across provinces and time periods.\nTo investigate the relationships between accident severity and factors such as weather, and road conditions.\nTo develop predictive models that forecast accident likelihood or severity, enabling proactive safety measures.\nTo deliver an interactive dashboard that allows stakeholders to explore the data and insights dynamically.\n\n\n\n\nThe dataset is sourced from the Kaggle, which aggregates accident reports from various agencies nationwide. Spanning 2019 to 2022, this reliable and comprehensive dataset captures incidents from both urban and rural regions, ensuring a representative sample of Thailand’s traffic accident landscape.\nhttps://www.kaggle.com/datasets/thaweewatboy/thailand-road-accident-2019-2022/data\n\n\n\nThis project will employ the following three analysis methods to investigate the dataset, with each step building upon the insights gained from the previous one.\n\n\n\nObjective: To investigate the dataset’s key characteristics and uncover relationships between variables.\nApproach:\n\nDescriptive statistics, such as mean, median, and standard deviation, will be calculated for important variables to summarize their central tendencies and spread.\nVisualization tools, including histograms, box plots, or scatter plots, will be used to examine the distributions of variables and identify potential patterns or correlations in the data\n\nExpected Outcome:\n\nA thorough overview of the dataset’s structure and significant features, providing a foundation of insights to inform the predictive modeling process.\n\n\n\n\n\n\nObjective: To examine trends and patterns in the data over time, with a particular emphasis on differences across provinces.\nApproach:\n\nThe data will be organized by province and time periods (e.g., monthly or quarterly) to construct time series specific to each province.\nTime series analysis techniques will be applied to detect trends, seasonal variations, or other temporal patterns that may differ between provinces.\n\nExpected Outcome:\n\nA detailed understanding of how the data changes over time within each province, highlighting key trends, seasonal effects, or unusual deviations.\n\n\n\n\n\n\nObjective: To develop a model that forecasts future outcomes or trends using historical data.\nApproach:\n\nThe dataset will be divided into training and testing sets to enable model development and validation.\nA machine learning algorithm will be selected and trained on the training data to predict the target variable.\nThe model’s performance will be evaluated using suitable metrics (e.g., accuracy, precision, recall) to measure its effectiveness and reliability.\n\nExpected Outcome:\n\nA working predictive model capable of accurately forecasting the target variable, accompanied by an assessment of its performance and potential limitations\n\n\n\n\n\n\n\n\n\n\nBuild a Shiny App to allow users to explore weather and accident relationships. \nInclude interactive visualizations & filtering options. \n\n\n\nIdentification of key weather-related risk factors affecting traffic safety in Singapore. \nInsights into accident prevention strategies under adverse weather conditions. \nA user-friendly web-based visual analytics tool for policymakers, transportation authorities, and researchers. \n\n\n\n\n\nData Processing: R (tidyverse, dplyr, lubridate) \nVisualization:ggplot2, plotly, leaflet \nInteractive Dashboard: Shiny, shinydashboard \nStatistical Analysis: correlation tests, ANOVA, regression models \n\n\n\n\n\n\n\nWeek \nTask \n\n\nWeek 9 \nData cleaning \n\n\nWeek 10 \nExploratory Data Analysis （EDA） \n\n\nWeek 11 \nData Visualization and Analysis + Shiny App prototype \n\n\nWeek 12 \nFinal testing & documentation & Poster \n\n\n\n\n\n\n\nProject GitHub Repository (Code, datasets, documentation) \nShiny App (Interactive dashboard for data exploration) \nProject Poster (Summary of findings) \nFinal Report (Methodology, results, conclusions)"
  },
  {
    "objectID": "Project_Proposal.html#introduction-and-motivation",
    "href": "Project_Proposal.html#introduction-and-motivation",
    "title": "Project_Proposal",
    "section": "",
    "text": "Traffic accidents represent a pressing public health and safety challenge in Thailand, resulting in substantial loss of life, injuries, and economic costs. With over 20,000 road traffic fatalities annually, Thailand ranks among the highest globally for road traffic mortality, according to the World Health Organization. This project is motivated by the urgent need to understand the underlying patterns and causes of these incidents to inform evidence-based interventions. By analyzing a comprehensive dataset of traffic accidents from 2019 to 2022, this study aims to uncover actionable insights that can guide policymakers, traffic authorities, and communities in reducing accident rates and mitigating their devastating impacts."
  },
  {
    "objectID": "Project_Proposal.html#dataset-overview",
    "href": "Project_Proposal.html#dataset-overview",
    "title": "Project_Proposal",
    "section": "",
    "text": "The dataset for this project covers traffic accidents in Thailand from 2019 to 2022, providing a detailed and multifaceted view of incidents across the country. It includes the following key attributes:\n\nTemporal Data: Dates and times of incidents and reports (incident_datetime, report_datetime).\nGeographical Data: Province names in Thai and English (province_th, province_en), along with latitude and longitude coordinates (latitude, longitude)\nAccident Details: Information on vehicle types (vehicle_type), presumed causes (presumed_cause), accident types (accident_type), number of vehicles involved (number_of_vehicles_involved), fatalities (number_of_fatalities), and injuries (number_of_injuries).\nEnvironmental Factors: Weather conditions (weather_condition), road descriptions (road_description), and slope descriptions (slope_description).\nAdministrative Data: Reporting agency (agency) and route details (route).\n\nThis dataset’s breadth and depth make it an invaluable resource for analyzing spatial, temporal, and causal trends in traffic accidents across Thailand."
  },
  {
    "objectID": "Project_Proposal.html#objectives",
    "href": "Project_Proposal.html#objectives",
    "title": "Project_Proposal",
    "section": "",
    "text": "The primary goals of this project are:\n\nTo identify trends and patterns in traffic accidents across provinces and time periods.\nTo investigate the relationships between accident severity and factors such as weather, and road conditions.\nTo develop predictive models that forecast accident likelihood or severity, enabling proactive safety measures.\nTo deliver an interactive dashboard that allows stakeholders to explore the data and insights dynamically."
  },
  {
    "objectID": "Project_Proposal.html#data-sources",
    "href": "Project_Proposal.html#data-sources",
    "title": "Project_Proposal",
    "section": "",
    "text": "The dataset is sourced from the Kaggle, which aggregates accident reports from various agencies nationwide. Spanning 2019 to 2022, this reliable and comprehensive dataset captures incidents from both urban and rural regions, ensuring a representative sample of Thailand’s traffic accident landscape.\nhttps://www.kaggle.com/datasets/thaweewatboy/thailand-road-accident-2019-2022/data"
  },
  {
    "objectID": "Project_Proposal.html#methodology",
    "href": "Project_Proposal.html#methodology",
    "title": "Project_Proposal",
    "section": "",
    "text": "This project will employ the following three analysis methods to investigate the dataset, with each step building upon the insights gained from the previous one.\n\n\n\nObjective: To investigate the dataset’s key characteristics and uncover relationships between variables.\nApproach:\n\nDescriptive statistics, such as mean, median, and standard deviation, will be calculated for important variables to summarize their central tendencies and spread.\nVisualization tools, including histograms, box plots, or scatter plots, will be used to examine the distributions of variables and identify potential patterns or correlations in the data\n\nExpected Outcome:\n\nA thorough overview of the dataset’s structure and significant features, providing a foundation of insights to inform the predictive modeling process.\n\n\n\n\n\n\nObjective: To examine trends and patterns in the data over time, with a particular emphasis on differences across provinces.\nApproach:\n\nThe data will be organized by province and time periods (e.g., monthly or quarterly) to construct time series specific to each province.\nTime series analysis techniques will be applied to detect trends, seasonal variations, or other temporal patterns that may differ between provinces.\n\nExpected Outcome:\n\nA detailed understanding of how the data changes over time within each province, highlighting key trends, seasonal effects, or unusual deviations.\n\n\n\n\n\n\nObjective: To develop a model that forecasts future outcomes or trends using historical data.\nApproach:\n\nThe dataset will be divided into training and testing sets to enable model development and validation.\nA machine learning algorithm will be selected and trained on the training data to predict the target variable.\nThe model’s performance will be evaluated using suitable metrics (e.g., accuracy, precision, recall) to measure its effectiveness and reliability.\n\nExpected Outcome:\n\nA working predictive model capable of accurately forecasting the target variable, accompanied by an assessment of its performance and potential limitations"
  },
  {
    "objectID": "Project_Proposal.html#expected-outcomes",
    "href": "Project_Proposal.html#expected-outcomes",
    "title": "Project_Proposal",
    "section": "",
    "text": "Build a Shiny App to allow users to explore weather and accident relationships. \nInclude interactive visualizations & filtering options. \n\n\n\nIdentification of key weather-related risk factors affecting traffic safety in Singapore. \nInsights into accident prevention strategies under adverse weather conditions. \nA user-friendly web-based visual analytics tool for policymakers, transportation authorities, and researchers."
  },
  {
    "objectID": "Project_Proposal.html#tools-technologies",
    "href": "Project_Proposal.html#tools-technologies",
    "title": "Project_Proposal",
    "section": "",
    "text": "Data Processing: R (tidyverse, dplyr, lubridate) \nVisualization:ggplot2, plotly, leaflet \nInteractive Dashboard: Shiny, shinydashboard \nStatistical Analysis: correlation tests, ANOVA, regression models"
  },
  {
    "objectID": "Project_Proposal.html#project-timeline-deliverable",
    "href": "Project_Proposal.html#project-timeline-deliverable",
    "title": "Project_Proposal",
    "section": "",
    "text": "Week \nTask \n\n\nWeek 9 \nData cleaning \n\n\nWeek 10 \nExploratory Data Analysis （EDA） \n\n\nWeek 11 \nData Visualization and Analysis + Shiny App prototype \n\n\nWeek 12 \nFinal testing & documentation & Poster"
  },
  {
    "objectID": "Project_Proposal.html#project-deliverables",
    "href": "Project_Proposal.html#project-deliverables",
    "title": "Project_Proposal",
    "section": "",
    "text": "Project GitHub Repository (Code, datasets, documentation) \nShiny App (Interactive dashboard for data exploration) \nProject Poster (Summary of findings) \nFinal Report (Methodology, results, conclusions)"
  },
  {
    "objectID": "Music.html",
    "href": "Music.html",
    "title": "🎵 Thank You, Professor Kam",
    "section": "",
    "text": "【Verse 1】\nI still remember the first time, staring at that chart\nLines and colors spoke, like data from the heart\nYou said, “Let the numbers tell their story true”\nAnd the world looked clearer, all because of you\n【Verse 2】\nEvery meeting, you showed us patient care\nEven when we struggled, you were always there\nSketching plots while guiding us through\nOur scattered thoughts found direction too\n【Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the maze of data, you helped us not to stray\nEach chart we make holds meaning deep and strong\nYou taught us how to see what’s been there all along\nThank you, Professor Kam, for showing us the art\nOf telling silent stories with a thoughtful heart\nIn every graph, your kindness shines within\nA gentle guide, through thick and thin\n【Verse 3】\nFrom bar charts to heatmaps’ colored gleam\nFrom timelines to maps, and everything in between\nYou taught not just the tools, but the “why”\nHow to let the data speak, and not just pass by\n【Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the maze of data, you helped us not to stray\nEach chart we make holds meaning deep and strong\nYou taught us how to see what’s been there all along\nThank you, Professor Kam, for showing us the art\nOf telling silent stories with a thoughtful heart\nIn every graph, your kindness shines within\nA gentle guide, through thick and thin\n【Bridge】\nThe road ahead is long, but we’ll always keep\nThe moments we shared, the lessons so deep\nYou gave us not just knowledge, but belief\nA strength that carries us past doubt and grief\n(But please don’t call me crying late at night…\nMy wife might think I’ve got a secret side)\n【Final Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the world of data, you helped us find our say\nEach thoughtful plot, each story we refine\nIs a trace of your heart, forever intertwined"
  },
  {
    "objectID": "Music.html#thank-you-professor-kam-ai-generated-content.-not-for-commercial-use-d",
    "href": "Music.html#thank-you-professor-kam-ai-generated-content.-not-for-commercial-use-d",
    "title": "🎵 Thank You, Professor Kam",
    "section": "",
    "text": "【Verse 1】\nI still remember the first time, staring at that chart\nLines and colors spoke, like data from the heart\nYou said, “Let the numbers tell their story true”\nAnd the world looked clearer, all because of you\n【Verse 2】\nEvery meeting, you showed us patient care\nEven when we struggled, you were always there\nSketching plots while guiding us through\nOur scattered thoughts found direction too\n【Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the maze of data, you helped us not to stray\nEach chart we make holds meaning deep and strong\nYou taught us how to see what’s been there all along\nThank you, Professor Kam, for showing us the art\nOf telling silent stories with a thoughtful heart\nIn every graph, your kindness shines within\nA gentle guide, through thick and thin\n【Verse 3】\nFrom bar charts to heatmaps’ colored gleam\nFrom timelines to maps, and everything in between\nYou taught not just the tools, but the “why”\nHow to let the data speak, and not just pass by\n【Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the maze of data, you helped us not to stray\nEach chart we make holds meaning deep and strong\nYou taught us how to see what’s been there all along\nThank you, Professor Kam, for showing us the art\nOf telling silent stories with a thoughtful heart\nIn every graph, your kindness shines within\nA gentle guide, through thick and thin\n【Bridge】\nThe road ahead is long, but we’ll always keep\nThe moments we shared, the lessons so deep\nYou gave us not just knowledge, but belief\nA strength that carries us past doubt and grief\n(But please don’t call me crying late at night…\nMy wife might think I’ve got a secret side)\n【Final Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the world of data, you helped us find our say\nEach thoughtful plot, each story we refine\nIs a trace of your heart, forever intertwined"
  },
  {
    "objectID": "Analysis/Time_Series/Time_series.html",
    "href": "Analysis/Time_Series/Time_series.html",
    "title": "Time Series Analysis",
    "section": "",
    "text": "In section will cover Time Series Analysis module of the R Shiny Application."
  },
  {
    "objectID": "Analysis/Time_Series/Time_series.html#overview",
    "href": "Analysis/Time_Series/Time_series.html#overview",
    "title": "Time Series Analysis",
    "section": "",
    "text": "In section will cover Time Series Analysis module of the R Shiny Application."
  },
  {
    "objectID": "Analysis/Time_Series/Time_series.html#data-preparation",
    "href": "Analysis/Time_Series/Time_series.html#data-preparation",
    "title": "Time Series Analysis",
    "section": "2. Data Preparation",
    "text": "2. Data Preparation\n\n2.1 Install and launch R packages\nThe project uses p_load() of pacman package to check if the R packages are installed in the computer.\n\npacman::p_load(tidyverse, lubridate, tsibble, feasts, fable, ggridges)\n\n\nlubridate provides a collection to functions to parse and wrangle time and date data.\ntsibble, feasts, fable and fable.prophet are belong to tidyverts, a family of tidy tools for time series data handling, analysis and forecasting.\n\ntsibble provides a data infrastructure for tidy temporal data with wrangling tools. Adapting the tidy data principles, tsibble is a data- and model-oriented object.\nfeasts provides a collection of tools for the analysis of time series data. The package name is an acronym comprising of its key features: Feature Extraction And Statistics for Time Series.\nfable is used for building and evaluating forecasting models, including ARIMA, exponential smoothing, and more, within a tidy modeling framework.\nggridges is used to create ridge density plots—ideal for visualizing the distribution of values (such as accident counts) across categories like provinces or years.\n\n\n\n\n2.2 Importing the data\nFirst, read_csv() of readr package is used to import visitor_arrivals_by_air.csv file into R environment. The imported file is saved an tibble object called ts_data.\nIn the code chunk below, ymd() of lubridate package is used to convert data type of incident_datetime field from Character to Date and thus to year-month-day.\n\nthai_data &lt;- read_csv(\"data/thai_road_accident_2019_2022.csv\", show_col_types = FALSE) %&gt;%\n  mutate(\n    incident_datetime = parse_date_time(incident_datetime, orders = c(\"ymd HMS\", \"ymd HM\", \"ymd\")),\n    Date = as_date(incident_datetime)\n  ) %&gt;%\n  filter(!is.na(Date))\n\n\n\n2.3 Conventional base ts object versus tibble object\n\ndaily_province_ts &lt;- thai_data %&gt;%\n  filter(!is.na(Date), !is.na(province_en)) %&gt;%\n  count(Date, province_en, name = \"Total_Accident\") %&gt;%\n  as_tsibble(index = Date, key = province_en)\ndaily_province_ts\n\n# A tsibble: 45,624 x 3 [1D]\n# Key:       province_en [78]\n   Date       province_en   Total_Accident\n   &lt;date&gt;     &lt;chr&gt;                  &lt;int&gt;\n 1 2019-01-01 Amnat Charoen              1\n 2 2019-01-02 Amnat Charoen              2\n 3 2019-01-09 Amnat Charoen              1\n 4 2019-01-15 Amnat Charoen              1\n 5 2019-01-16 Amnat Charoen              1\n 6 2019-02-08 Amnat Charoen              2\n 7 2019-02-11 Amnat Charoen              1\n 8 2019-02-17 Amnat Charoen              1\n 9 2019-02-18 Amnat Charoen              1\n10 2019-03-26 Amnat Charoen              2\n# ℹ 45,614 more rows\n\n\nThis step transforms the data into a tidy time series format using tsibble, counting daily accidents by province. The output shows that each row now represents the number of accidents on a specific day for a given province, which is ready for time series analysis."
  },
  {
    "objectID": "Analysis/Time_Series/Time_series.html#time-series-with-province-on-traffic-accident",
    "href": "Analysis/Time_Series/Time_series.html#time-series-with-province-on-traffic-accident",
    "title": "Time Series Analysis",
    "section": "3. Time series with province on traffic accident",
    "text": "3. Time series with province on traffic accident\nIn the later graph generation, I would be only selecting a few province to do demonstration here due to large amount of province provided in excel.\n\ndaily_province_ts %&gt;%\n  filter(province_en == \"Bangkok\", Date &gt;= \"2021-01-01\") %&gt;%\n  ggplot(aes(x = Date, y = Total_Accident)) +\n  geom_line(linewidth = 0.5, color = \"black\") +\n  labs(\n    title = \"Daily Accidents in Bangkok (2021–2023)\",\n    x = \"Date\",\n    y = \"Total Accidents\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nFrom this chart, we can see that the daily number of traffic accidents in Bangkok shows a slight upward trend from 2021 to 2023. Although there’s a lot of day-to-day fluctuation, the overall number of accidents appears to be higher in 2023 compared to 2021, indicating a gradual increase. There’s no clear seasonal or periodic pattern—accidents occur quite randomly, but with a general tendency to rise over time.\n\n\nMore graphs to check\n\ntop_provinces &lt;- daily_province_ts %&gt;%\n  group_by(province_en) %&gt;%\n  summarise(total = sum(Total_Accident)) %&gt;%\n  slice_max(total, n = 12) %&gt;%\n  pull(province_en)\n\ndaily_province_ts %&gt;%\n  filter(province_en %in% top_provinces) %&gt;%\n  ggplot(aes(x = Date, y = Total_Accident)) +\n  geom_line(linewidth = 0.5) +\n  facet_wrap(~ province_en, ncol = 3, scales = \"free_y\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nNext we want to show all province but the result is too big so we set “n = 5” to show the top 5 province’s daily accident at this point.\n\ntop_provinces &lt;- daily_province_ts %&gt;%\n  group_by(province_en) %&gt;%\n  summarise(total = sum(Total_Accident, na.rm = TRUE)) %&gt;%\n  slice_max(order_by = total, n = 10, with_ties = FALSE) %&gt;%\n  pull(province_en)\n\ndaily_province_ts %&gt;%\n  filter(province_en %in% top_provinces) %&gt;%\n  mutate(year = year(Date)) %&gt;%\n  ggplot(aes(x = Total_Accident, y = reorder(province_en, desc(province_en)), fill = as.factor(year))) +\n  geom_density_ridges(scale = 2, rel_min_height = 0.01, alpha = 0.8, color = \"white\") +\n  facet_wrap(~ year, ncol = 1, scales = \"free_y\") +\n  scale_fill_brewer(palette = \"Set2\") +\n  theme_ridges() +\n  labs(\n    title = \"Top 5 Provinces: Distribution of Daily Accidents\",\n    x = \"Daily Accident Count\",\n    y = NULL\n  ) +\n  theme(legend.position = \"none\")\n\nPicking joint bandwidth of 0.396\n\n\nPicking joint bandwidth of 0.425\n\n\nPicking joint bandwidth of 0.459\n\n\nPicking joint bandwidth of 0.447\n\n\n\n\n\n\n\n\n\nIn the shiny app, we will have a place to show the all the distribution of daily accident for each by selecting province. We will also have a scroll bar to allow the user observe the province’s daily accident based on different year"
  },
  {
    "objectID": "Analysis/Time_Series/Time_series.html#daily-lag-relationship-for-traffic-accident",
    "href": "Analysis/Time_Series/Time_series.html#daily-lag-relationship-for-traffic-accident",
    "title": "Time Series Analysis",
    "section": "4. Daily lag relationship for Traffic Accident",
    "text": "4. Daily lag relationship for Traffic Accident\n\nlag_values &lt;- c(20, 40, 60)\n\nfor (lag_val in lag_values) {\n  p &lt;- daily_province_ts %&gt;%\n    filter(province_en == \"Bangkok\") %&gt;%\n    fill_gaps() %&gt;%\n    ACF(Total_Accident, lag_max = lag_val) %&gt;%\n    autoplot() +\n    labs(\n      title = paste(\"ACF of Daily Accidents in Bangkok (lag =\", lag_val, \")\"),\n      x = \"Lag (days)\",\n      y = \"ACF\"\n    )\n  print(p)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis ACF plot shows the correlation between daily traffic accidents in Bangkok and their past values over a 60-day period. The x-axis shows the lag in days (how many days back), and the y-axis shows the autocorrelation (ACF). Bars that cross the blue dashed lines are statistically significant. We can see mild short-term correlation in the first 10 lags, but overall ACF values are low, indicating weak memory in the data. In the final Shiny app, users will be able to choose the province and lag window themselves. The lag setting controls how far back we look for patterns, and the ACF helps detect trends or seasonality in the data."
  },
  {
    "objectID": "Analysis/Time_Series/Time_series.html#monthly-accident-type-with-province",
    "href": "Analysis/Time_Series/Time_series.html#monthly-accident-type-with-province",
    "title": "Time Series Analysis",
    "section": "5. Monthly Accident type with Province",
    "text": "5. Monthly Accident type with Province\nWhen conducting time series analysis, we are not only interested in the overall trend of accident counts over time but also in how different types of accidents vary across specific time periods. Focusing on a particular province and year, analyzing how accident types evolve month by month can help identify high-risk periods, uncover recurring patterns, and support decision-making in areas such as policy planning or resource allocation. To achieve this analytical goal, we break the process into three main steps: starting from user input, transforming the data accordingly, and ultimately generating a time series visualization that is both interactive and informative.\n\nStep 1: User selection\nIn the first step, we simulate user input by assigning values to province_choice and year_choice, which determine the scope of the analysis. These inputs specify the province and year the user wants to explore. In a static R script, we set them manually, but in a Shiny app, these values will be dynamically chosen by the user via dropdown menus or other UI elements. These inputs form the foundation for filtering the dataset in the following steps.\n\nprovince_choice &lt;- \"Bangkok\"\nyear_choice &lt;- 2022\n\n\n\nStep 2: Data Preparation\nThe second step involves preparing the dataset for time series analysis. We first create a Month variable that captures year and month using the yearmonth() function, and extract the year for filtering purposes. Based on the selected province and year, we filter the dataset and then group the data by month and accident type. For each combination, we calculate the total number of accidents. This gives us a monthly breakdown of accident types within the chosen province and year. The result is then converted into a tsibble object, a tidy time series structure that supports downstream analysis and visualization. In a Shiny application, this step would typically be placed inside a reactive() expression that updates automatically based on user input.\n\nacc_ts &lt;- thai_data %&gt;%\n  mutate(Month = yearmonth(incident_datetime),\n         year = year(incident_datetime)) %&gt;%\n  filter(province_en == province_choice, year == year_choice) %&gt;%\n  group_by(Month, accident_type) %&gt;%\n  summarise(Total = n(), .groups = \"drop\") %&gt;%\n  as_tsibble(index = Month, key = accident_type)\n\n\n\nStep 3: Visualize\nIn the third step, we visualize the processed data by plotting a time series graph that shows how each accident type changes over the months. The x-axis represents the months, the y-axis shows the number of accidents, and different lines (distinguished by color) represent different accident types. This visualization allows users to clearly observe trends, seasonal shifts, or sudden spikes in specific types of accidents. In a Shiny app, this plot would be rendered inside a renderPlot() function, updating dynamically whenever the user changes the selected province or year. The resulting chart enhances interpretability and provides valuable insights into accident dynamics over time.\n\nggplot(acc_ts, aes(x = Month, y = Total, color = accident_type)) +\n  geom_line(linewidth = 1) +\n  geom_point() +\n  labs(\n    title = paste(\"Monthly Accident Types in\", province_choice, \"(\", year_choice, \")\"),\n    x = \"Month\",\n    y = \"Number of Accidents\",\n    color = \"Accident Type\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThis chart shows the monthly number of different accident types in Bangkok for the year 2022. It reveals that rear-end collisions were the most common throughout the year, with noticeable spikes around mid and late 2022. Rollover/fallen on straight road and side collisions also occurred frequently but with less intensity. Other accident types remained relatively low and stable across the months, indicating a clear dominance of rear-end collisions in Bangkok’s traffic accidents during this period."
  },
  {
    "objectID": "Analysis/Time_Series/Time_series.html#expected-shiny-application-model",
    "href": "Analysis/Time_Series/Time_series.html#expected-shiny-application-model",
    "title": "Time Series Analysis",
    "section": "6. Expected Shiny Application Model",
    "text": "6. Expected Shiny Application Model\n\nBy Province Only\n\n\n\nDaily Lag\n\n\n\nBy Accident Type"
  },
  {
    "objectID": "Analysis/EDA/EDA.html",
    "href": "Analysis/EDA/EDA.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "This study aims to explore the potential factors influencing the occurrence of traffic accidents in Thailand through exploratory data analysis (EDA), revealing underlying patterns and risk distributions. Utilizing road accident data from Thailand spanning 2019 to 2022, the analysis will focus on the following aspects:\n\nTemporal Factors Examine accident timings by year, month, and day to identify seasonal trends and peak periods, including potential impacts from holidays and special events.\nAccident Types and Severity\nCategorize accidents (e.g., collisions, rollovers, rear-end crashes) and assess severity through casualty and damage statistics; explore correlations with time and location.\nOther Potential Influencing Factors\nInvestigate additional variables like weather, road conditions, and vehicle types to evaluate their effects on accident occurrences and interactions.\n\nOverall, this EDA will use visualization tools and statistical methods to analyze traffic accidents in Thailand. The goal is to identify key factors affecting accidents and provide data-driven insights to support traffic safety improvements and policy development."
  },
  {
    "objectID": "Analysis/EDA/EDA.html#overview",
    "href": "Analysis/EDA/EDA.html#overview",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "This study aims to explore the potential factors influencing the occurrence of traffic accidents in Thailand through exploratory data analysis (EDA), revealing underlying patterns and risk distributions. Utilizing road accident data from Thailand spanning 2019 to 2022, the analysis will focus on the following aspects:\n\nTemporal Factors Examine accident timings by year, month, and day to identify seasonal trends and peak periods, including potential impacts from holidays and special events.\nAccident Types and Severity\nCategorize accidents (e.g., collisions, rollovers, rear-end crashes) and assess severity through casualty and damage statistics; explore correlations with time and location.\nOther Potential Influencing Factors\nInvestigate additional variables like weather, road conditions, and vehicle types to evaluate their effects on accident occurrences and interactions.\n\nOverall, this EDA will use visualization tools and statistical methods to analyze traffic accidents in Thailand. The goal is to identify key factors affecting accidents and provide data-driven insights to support traffic safety improvements and policy development."
  },
  {
    "objectID": "Analysis/EDA/EDA.html#data-preparation",
    "href": "Analysis/EDA/EDA.html#data-preparation",
    "title": "Exploratory Data Analysis",
    "section": "2. Data Preparation",
    "text": "2. Data Preparation\n\n2.1 Install and launch R packages\nWe load the following R packages using the pacman::p_load() function:\n\ntidyverse: Core collection of R packages designed for data science\nggthemes: to use additional themes for ggplot2\npatchwork: to prepare composite figure created using ggplot2\nggridges: to plot ridgeline plots\nggdist: for visualizations of distributions and uncertainty\nscales: provides the internal scaling infrastructure used by ggplot2\nplotly: R library for plotting interactive statistical graphs\nggstatsplot: Based Plots with Statistical Details\nggpubr: For publication-ready plots\n\n\npacman::p_load(tidyverse,ggthemes,\n               ggridges, ggdist,\n               patchwork, scales,\n               corrplot, ggstatsplot, \n               plotly,ggpubr,\n               performance, kableExtra,\n               lubridate)\n\n\n\n2.2 Import Data\nThis project analyzes Thailand’s road accident dataset, covering nationwide traffic incidents from 2019 to 2022, including their time, location, and characteristics.\n\ndata &lt;- read.csv(\"data/thai_road_accident_2019_2022.csv\")\n\n\n\n2.3 Overview of the data\nThe dataset consists of 81,735 observations and multiple variables. Each row details a recorded road accident event in Thailand between 2019 and 2022, including the date, location, casualties, and other relevant characteristics of the incident.\n\nUse head() to view data\n\nhead(data)\n\n  acc_code   incident_datetime     report_datetime province_th\n1   571905 2019-01-01 00:00:00 2019-01-02 06:11:00        ลพบุรี\n2  3790870 2019-01-01 00:03:00 2020-02-20 13:48:00   อุบลราชธานี\n3   599075 2019-01-01 00:05:00 2019-01-01 10:35:00 ประจวบคีรีขันธ์\n4   571924 2019-01-01 00:20:00 2019-01-02 05:12:00     เชียงใหม่\n5   599523 2019-01-01 00:25:00 2019-01-04 09:42:00    นครสวรรค์\n6   571982 2019-01-01 00:30:00 2019-01-07 12:46:00    แม่ฮ่องสอน\n          province_en                    agency\n1              Loburi department of rural roads\n2    Ubon Ratchathani    department of highways\n3 Prachuap Khiri Khan    department of highways\n4          Chiang Mai department of rural roads\n5        Nakhon Sawan    department of highways\n6        Mae Hong Son department of rural roads\n                                             route          vehicle_type\n1   แยกทางหลวงหมายเลข 21 (กม.ที่ 31+000) - บ้านวังเพลิง            motorcycle\n2                               เดชอุดม - อุบลราชธานี private/passenger car\n3                               ปราณบุรี - ปากน้ำปราณ            motorcycle\n4 เชื่อมทางหลวงหมายเลข 1013 (กม.ที่ 8+200) - บ้านขุนกลาง            motorcycle\n5                                  เกยไชย - ศรีมงคล private/passenger car\n6  แยกทางหลวงหมายเลข 108 (กม.ที่ 199+400) - บ้านแม่สุริน            motorcycle\n                                 presumed_cause\n1        driving under the influence of alcohol\n2                                      speeding\n3                                      speeding\n4        driving under the influence of alcohol\n5 cutting in closely by people/vehicles/animals\n6                                      speeding\n                       accident_type number_of_vehicles_involved\n1                              other                           1\n2   rollover/fallen on straight road                           1\n3 head-on collision (not overtaking)                           2\n4                              other                           1\n5   rollover/fallen on straight road                           1\n6                              other                           1\n  number_of_fatalities number_of_injuries weather_condition latitude longitude\n1                    0                  2             clear 14.95910 100.87346\n2                    0                  2             clear 15.21074 104.86269\n3                    1                  0             clear 12.37426  99.90795\n4                    0                  1             clear 18.60172  98.80420\n5                    0                  0             clear 15.86639 100.59001\n6                    0                  2             foggy 18.81592  97.92094\n  road_description slope_description\n1    straight road          no slope\n2    straight road          no slope\n3       wide curve        slope area\n4    straight road          no slope\n5    straight road          no slope\n6       wide curve          no slope\n\n\nWe find that there are several columns written by Thai language, so we have to clean the data before we use it. The code below can help us.\n\ndata &lt;- subset(data, select = -c(province_th, route))\n\nCheck the data again\n\nhead(data)\n\n  acc_code   incident_datetime     report_datetime         province_en\n1   571905 2019-01-01 00:00:00 2019-01-02 06:11:00              Loburi\n2  3790870 2019-01-01 00:03:00 2020-02-20 13:48:00    Ubon Ratchathani\n3   599075 2019-01-01 00:05:00 2019-01-01 10:35:00 Prachuap Khiri Khan\n4   571924 2019-01-01 00:20:00 2019-01-02 05:12:00          Chiang Mai\n5   599523 2019-01-01 00:25:00 2019-01-04 09:42:00        Nakhon Sawan\n6   571982 2019-01-01 00:30:00 2019-01-07 12:46:00        Mae Hong Son\n                     agency          vehicle_type\n1 department of rural roads            motorcycle\n2    department of highways private/passenger car\n3    department of highways            motorcycle\n4 department of rural roads            motorcycle\n5    department of highways private/passenger car\n6 department of rural roads            motorcycle\n                                 presumed_cause\n1        driving under the influence of alcohol\n2                                      speeding\n3                                      speeding\n4        driving under the influence of alcohol\n5 cutting in closely by people/vehicles/animals\n6                                      speeding\n                       accident_type number_of_vehicles_involved\n1                              other                           1\n2   rollover/fallen on straight road                           1\n3 head-on collision (not overtaking)                           2\n4                              other                           1\n5   rollover/fallen on straight road                           1\n6                              other                           1\n  number_of_fatalities number_of_injuries weather_condition latitude longitude\n1                    0                  2             clear 14.95910 100.87346\n2                    0                  2             clear 15.21074 104.86269\n3                    1                  0             clear 12.37426  99.90795\n4                    0                  1             clear 18.60172  98.80420\n5                    0                  0             clear 15.86639 100.59001\n6                    0                  2             foggy 18.81592  97.92094\n  road_description slope_description\n1    straight road          no slope\n2    straight road          no slope\n3       wide curve        slope area\n4    straight road          no slope\n5    straight road          no slope\n6       wide curve          no slope\n\n\nNext, we will check if there is any missing value in our columns.\n\n# check missing values\nmissing_values &lt;- colSums(is.na(data)) \n\nmissing_values_only &lt;- missing_values[missing_values &gt; 0]\n\nmissing_values_only %&gt;% kable() \n\n\n\n\n\nx\n\n\n\n\nlatitude\n359\n\n\nlongitude\n359\n\n\n\n\n\nCheck the pattern of missing values: Both latitude and longitude have 359 missing values, which may indicate that these missing values occur in the same rows (e.g., some accident records completely lack location coordinates). You can verify this by checking:\n\nsum(is.na(data$latitude) & is.na(data$longitude))\n\n[1] 359\n\n\nSince the missing value is only 0.439%, we can remove the missing value.\n\ndata_clean &lt;- na.omit(data)\ncolSums(is.na(data_clean))\n\n                   acc_code           incident_datetime \n                          0                           0 \n            report_datetime                 province_en \n                          0                           0 \n                     agency                vehicle_type \n                          0                           0 \n             presumed_cause               accident_type \n                          0                           0 \nnumber_of_vehicles_involved        number_of_fatalities \n                          0                           0 \n         number_of_injuries           weather_condition \n                          0                           0 \n                   latitude                   longitude \n                          0                           0 \n           road_description           slope_description \n                          0                           0 \n\n\n\n\nUse duplicate() to check for duplicates\nThere are no duplicate entries in the dataset.\n\ndata[duplicated(data_clean),]\n\n [1] acc_code                    incident_datetime          \n [3] report_datetime             province_en                \n [5] agency                      vehicle_type               \n [7] presumed_cause              accident_type              \n [9] number_of_vehicles_involved number_of_fatalities       \n[11] number_of_injuries          weather_condition          \n[13] latitude                    longitude                  \n[15] road_description            slope_description          \n&lt;0 rows&gt; (or 0-length row.names)\n\n\nCheck the type of data\n\nstr(data_clean)\n\n'data.frame':   81376 obs. of  16 variables:\n $ acc_code                   : int  571905 3790870 599075 571924 599523 571982 612782 599235 600643 599105 ...\n $ incident_datetime          : chr  \"2019-01-01 00:00:00\" \"2019-01-01 00:03:00\" \"2019-01-01 00:05:00\" \"2019-01-01 00:20:00\" ...\n $ report_datetime            : chr  \"2019-01-02 06:11:00\" \"2020-02-20 13:48:00\" \"2019-01-01 10:35:00\" \"2019-01-02 05:12:00\" ...\n $ province_en                : chr  \"Loburi\" \"Ubon Ratchathani\" \"Prachuap Khiri Khan\" \"Chiang Mai\" ...\n $ agency                     : chr  \"department of rural roads\" \"department of highways\" \"department of highways\" \"department of rural roads\" ...\n $ vehicle_type               : chr  \"motorcycle\" \"private/passenger car\" \"motorcycle\" \"motorcycle\" ...\n $ presumed_cause             : chr  \"driving under the influence of alcohol\" \"speeding\" \"speeding\" \"driving under the influence of alcohol\" ...\n $ accident_type              : chr  \"other\" \"rollover/fallen on straight road\" \"head-on collision (not overtaking)\" \"other\" ...\n $ number_of_vehicles_involved: int  1 1 2 1 1 1 2 2 2 2 ...\n $ number_of_fatalities       : int  0 0 1 0 0 0 0 1 3 0 ...\n $ number_of_injuries         : int  2 2 0 1 0 2 2 0 0 1 ...\n $ weather_condition          : chr  \"clear\" \"clear\" \"clear\" \"clear\" ...\n $ latitude                   : num  15 15.2 12.4 18.6 15.9 ...\n $ longitude                  : num  100.9 104.9 99.9 98.8 100.6 ...\n $ road_description           : chr  \"straight road\" \"straight road\" \"wide curve\" \"straight road\" ...\n $ slope_description          : chr  \"no slope\" \"no slope\" \"slope area\" \"no slope\" ...\n - attr(*, \"na.action\")= 'omit' Named int [1:359] 502 7644 8040 8045 11280 17958 24474 36920 40524 41425 ...\n  ..- attr(*, \"names\")= chr [1:359] \"502\" \"7644\" \"8040\" \"8045\" ...\n\n\nChange the data type\n\ndata_clean$incident_datetime &lt;- as.POSIXct(data_clean$incident_datetime, format = \"%Y-%m-%d %H:%M:%S\")\ndata_clean$report_datetime &lt;- as.POSIXct(data_clean$report_datetime, format = \"%Y-%m-%d %H:%M:%S\")\n\n\ndata_clean$province_en &lt;- as.factor(data_clean$province_en)\ndata_clean$agency &lt;- as.factor(data_clean$agency)\ndata_clean$vehicle_type &lt;- as.factor(data_clean$vehicle_type)\ndata_clean$presumed_cause &lt;- as.factor(data_clean$presumed_cause)\ndata_clean$accident_type &lt;- as.factor(data_clean$accident_type)\ndata_clean$weather_condition &lt;- as.factor(data_clean$weather_condition)\ndata_clean$road_description &lt;- as.factor(data_clean$road_description)\ndata_clean$slope_description &lt;- as.factor(data_clean$slope_description)\n\n\nstr(data_clean)\n\n'data.frame':   81376 obs. of  16 variables:\n $ acc_code                   : int  571905 3790870 599075 571924 599523 571982 612782 599235 600643 599105 ...\n $ incident_datetime          : POSIXct, format: \"2019-01-01 00:00:00\" \"2019-01-01 00:03:00\" ...\n $ report_datetime            : POSIXct, format: \"2019-01-02 06:11:00\" \"2020-02-20 13:48:00\" ...\n $ province_en                : Factor w/ 78 levels \"Amnat Charoen\",..: 21 72 50 10 30 23 13 63 64 71 ...\n $ agency                     : Factor w/ 3 levels \"department of highways\",..: 2 1 1 2 1 2 1 1 1 1 ...\n $ vehicle_type               : Factor w/ 15 levels \"4-wheel pickup truck\",..: 7 12 7 7 12 7 1 7 7 7 ...\n $ presumed_cause             : Factor w/ 54 levels \"abrupt lane change\",..: 10 40 40 10 4 40 14 40 40 40 ...\n $ accident_type              : Factor w/ 11 levels \"collision at intersection corner\",..: 5 9 4 5 9 5 1 3 7 7 ...\n $ number_of_vehicles_involved: int  1 1 2 1 1 1 2 2 2 2 ...\n $ number_of_fatalities       : int  0 0 1 0 0 0 0 1 3 0 ...\n $ number_of_injuries         : int  2 2 0 1 0 2 2 0 0 1 ...\n $ weather_condition          : Factor w/ 7 levels \"clear\",\"dark\",..: 1 1 1 1 1 3 1 1 1 1 ...\n $ latitude                   : num  15 15.2 12.4 18.6 15.9 ...\n $ longitude                  : num  100.9 104.9 99.9 98.8 100.6 ...\n $ road_description           : Factor w/ 19 levels \"bridge (across river/canal)\",..: 14 14 17 14 14 17 10 14 17 14 ...\n $ slope_description          : Factor w/ 3 levels \"no slope\",\"other\",..: 1 1 3 1 1 1 2 1 1 1 ...\n - attr(*, \"na.action\")= 'omit' Named int [1:359] 502 7644 8040 8045 11280 17958 24474 36920 40524 41425 ...\n  ..- attr(*, \"names\")= chr [1:359] \"502\" \"7644\" \"8040\" \"8045\" ..."
  },
  {
    "objectID": "Analysis/EDA/EDA.html#exploratory-data-analysis",
    "href": "Analysis/EDA/EDA.html#exploratory-data-analysis",
    "title": "Exploratory Data Analysis",
    "section": "3. Exploratory Data Analysis",
    "text": "3. Exploratory Data Analysis\n\n3.1 Overview of Accidents by Time\n\n3.1.1 Overview of Accidents by Year\n\ndata_clean$year &lt;- year(data_clean$incident_datetime)\n\nggplot(data_clean, aes(x = as.factor(year))) +\n  geom_bar(fill = \"lightblue\") +\n  labs(title = \"Number of Accidents by Year\", x = \"Year\", y = \"Count\")\n\n\n\n\n\n\n\n\nThis chart illustrates the annual distribution of road accidents in Thailand from 2019 to 2022. The chart is a histogram, with the X-axis representing the years (2019 to 2022) and the Y-axis representing the number of accidents (Count). From the chart, we can observe the following:\n\nIn 2019, the number of accidents was approximately 18,000, slightly lower than in the following years.\nFrom 2020 to 2022, the number of accidents remained relatively stable, with around 20,000 accidents each year, indicating a slight increase and stabilization over these three years.\n\nThis chart provides a preliminary insight into the trend of road accidents in Thailand during this period, laying the groundwork for further analysis of accident causes or the development of traffic safety policies.\n\n\n3.1.2 Overview of Accidents by Month\n\ndata_clean$month &lt;- month(data_clean$incident_datetime, label = TRUE)  \n\nggplot(data_clean, aes(x = month)) +\n  geom_bar(fill = \"lightgreen\") +\n  labs(title = \"Number of Accidents by Month\", x = \"Month\", y = \"Count\")\n\n\n\n\n\n\n\n\nThis chart illustrates the monthly distribution of road accidents in Thailand from 2019 to 2022. The chart is a histogram, with the X-axis representing the months (January to December) and the Y-axis representing the number of accidents (Count). From the chart, we can observe the following:\n\nThe number of accidents is relatively evenly distributed throughout the year, but certain months show noticeable peaks.\nFebruary and December have the highest number of accidents, approaching 9,000, possibly due to February being the shortest month yet having a high accident frequency, or December being a peak holiday season.\nThe number of accidents in other months mostly ranges between 6,000 and 7,000, indicating a relatively stable accident frequency.\n\nThis chart highlights the seasonal patterns of road accidents in Thailand, providing insights for further analysis of the causes behind the increase in accidents during specific months.\n\n\n\n3.2 Overview of Accidents by Province\n\n#|fig-width: 12\n#|fig-height: 10\np &lt;- ggplot(data_clean, aes(x = province_en)) +\n  geom_bar(fill = \"skyblue\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(title = \"Number of Accidents by Province\", x = \"Province\", y = \"Count\")\n\n\np_plotly &lt;- ggplotly(p) %&gt;%\n  layout(xaxis = list(tickmode = \"array\", tickvals = c(), ticktext = c()))\n\np_plotly\n\n\n\n\n\nThis chart illustrates the distribution of road accidents in Thailand by province from 2019 to 2022. The chart is a histogram, with the X-axis representing the provinces (Province) and the Y-axis representing the number of accidents (Count). From the chart, we can observe the following:\n\nBangkok has the highest number of accidents, with 6,089 incidents, significantly surpassing other provinces, indicating a high accident frequency in Thailand’s capital and transportation hub.\nThe number of accidents in other provinces mostly ranges between 0 and 2,000, with a more scattered distribution. Some provinces, such as Chiang Mai, also show relatively higher accident numbers.\nOverall, there is a significant variation in accident numbers across provinces, reflecting the influence of regional traffic conditions and population density.\n\nThis chart highlights the regional distribution patterns of road accidents in Thailand, providing insights for developing targeted traffic safety measures in high-accident provinces.\n\n\n3.3 Overview of Accidents by Vehicle Type\n\nggplot(data_clean, aes(x = vehicle_type)) +\n  geom_bar(fill = \"lightgreen\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Number of Accidents by Vehicle Type\", x = \"Vehicle Type\", y = \"Count\")\n\n\n\n\n\n\n\n\nThis chart illustrates the distribution of road accidents in Thailand by vehicle type from 2019 to 2022. The chart is a histogram, with the X-axis representing the vehicle types (Vehicle Type) and the Y-axis representing the number of accidents (Count). From the chart, we can observe the following:\n\nThe 4-wheel pickup truck has the highest number of accidents, exceeding 25,000 incidents, indicating its dominant role in road accidents in Thailand.\nPrivate/passenger cars and motorized tricycles also have high accident numbers, approaching 15,000 and 10,000 incidents respectively, reflecting their widespread use and associated risks.\nOther vehicle types, such as bicycles and trailers with trucks, have fewer accidents, mostly below 1,000 incidents.\n\nThis chart highlights the involvement of different vehicle types in road accidents in Thailand, providing insights for developing safety measures targeting high-risk vehicles.\n\n\n3.4 Overview of Accidents by Presumed cause\n\nggplot(data_clean, aes(x = presumed_cause)) +\n  geom_bar(fill = \"salmon\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Number of Accidents by Presumed Cause\", x = \"Presumed Cause\", y = \"Count\")\n\n\n\n\n\n\n\n\nSince there are too many different causes in this columns but most of them are not the main reason for accident, we will focus on those have high count value.\n\n#|fig-width: 12\n#|fig-height: 10\ncause_counts &lt;- data_clean %&gt;%\n  count(presumed_cause) %&gt;%\n  rename(count = n)\n\nthreshold &lt;- 1000\nsignificant_causes &lt;- cause_counts %&gt;%\n  filter(count &gt; threshold)\n\ndata_filtered &lt;- data_clean %&gt;%\n  filter(presumed_cause %in% significant_causes$presumed_cause)\n\n\np &lt;- ggplot(data_filtered, aes(x = reorder(presumed_cause, -table(presumed_cause)[presumed_cause]))) +\n  geom_bar(fill = \"salmon\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Number of Accidents by Presumed Cause\", x = \"Presumed Cause\", y = \"Count\")\n\n\nggplotly(p)\n\n\n\n\n\nThis chart illustrates the distribution of road accidents in Thailand by presumed cause from 2019 to 2022. The chart is a histogram, with the X-axis representing the presumed causes (Presumed Cause) and the Y-axis representing the number of accidents (Count). From the chart, we can observe the following:\n\nSpeeding is the leading cause of accidents, with over 60,000 incidents, far exceeding other causes, highlighting the severe impact of speeding on road accidents in Thailand.\nOther causes, such as animals, falling asleep, vehicle equipment failure, and driving under the influence of alcohol, have relatively fewer accidents, all below 5,000 incidents.\nOverall, speeding stands out as the primary challenge for road safety in Thailand, while other causes have a relatively minor impact.\n\nThis chart highlights the main causes of road accidents in Thailand, providing insights for developing targeted traffic safety policies.\n\n\n3.5 Overview of Accidents by Weather condition\n\nggplot(data_clean, aes(x = weather_condition)) +\n  geom_bar(fill = \"lightcoral\") +\n  labs(title = \"Number of Accidents by Weather Condition\", x = \"Weather Condition\", y = \"Count\")\n\n\n\n\n\n\n\n\nThis chart illustrates the distribution of road accidents in Thailand by weather condition from 2019 to 2022. The chart is a histogram, with the X-axis representing the weather conditions (Weather Condition) and the Y-axis representing the number of accidents (Count). From the chart, we can observe the following:\n\nThe majority of accidents occur under clear weather conditions, with over 60,000 incidents, indicating that most accidents happen in good weather.\nRainy weather accounts for around 10,000 accidents, which is notable but significantly lower compared to clear weather.\nOther weather conditions, such as dark, foggy, and land slide/natural disaster, have minimal accidents, all below 1,000 incidents, showing a negligible impact.\n\nThis chart suggests that weather conditions may not have a significant impact on road accidents in Thailand, as the vast majority of accidents occur in clear weather, while adverse weather conditions contribute to relatively few incidents.\n\n\n3.6 Severity of Accidents\n\n3.6.1 Fatalities by Accident Type\n\ndata_clean$number_of_fatalities &lt;- as.numeric(data_clean$number_of_fatalities)\n\n\np &lt;- ggplot(data_clean, aes(x = number_of_fatalities)) +\n  geom_histogram(binwidth = 1, fill = \"purple\", color = \"black\") +\n  labs(title = \"Distribution of Fatalities per Accident\", \n       x = \"Number of Fatalities\", \n       y = \"Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 0, hjust = 0.5))\n\n\nggplotly(p)\n\n\n\n\n\nThis chart illustrates the distribution of fatalities per road accident in Thailand from 2019 to 2022. The chart is a histogram, with the X-axis representing the number of fatalities per accident (Number of Fatalities) and the Y-axis representing the number of accidents (Count). From the chart, we can observe the following:\n\nThe vast majority of accidents (over 60,000) result in 0 fatalities, indicating that most accidents do not lead to deaths.\nAccidents with 1 fatality account for around 5,000 incidents, while those with 2 or more fatalities are extremely rare, showing that fatal accidents are relatively uncommon.\nOverall, the fatality rate of road accidents in Thailand is low, with most accidents not resulting in any deaths.\n\nThis chart indicates that the fatality rate of road accidents in Thailand is generally low, and fatal accidents are not common.\n\n\n3.6.2 Injuries by Accident Type\n\ndata_clean$number_of_injuries &lt;- as.numeric(data_clean$number_of_injuries)\n\n\np &lt;- ggplot(data_clean, aes(x = number_of_injuries)) +\n  geom_histogram(binwidth = 1, fill = \"orange\", color = \"black\") +\n  labs(title = \"Distribution of Injuries per Accident\", \n       x = \"Number of Injuries\", \n       y = \"Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 0, hjust = 0.5))\n\n\nggplotly(p)\n\n\n\n\n\nThis chart illustrates the distribution of injuries per road accident in Thailand from 2019 to 2022. The chart is a histogram, with the X-axis representing the number of injuries per accident (Number of Injuries) and the Y-axis representing the number of accidents (Count). From the chart, we can observe the following:\n\nThe majority of accidents result in 0 to 2 injuries, with over 40,000 accidents causing no injuries at all.\nAs the number of injuries increases, the number of corresponding accidents sharply declines. Accidents with more than 5 injuries are relatively rare.\n\nOverall, most road accidents in Thailand do not cause many injuries, indicating that the severity of accidents tends to be low in terms of injuries.\n\n\n\n3.7 Effect of Vehicle Type on Accident Outcomes\n\n3.7.1 Distribution of Fatalities by Vehicle Type\n\ndata_clean$vehicle_type &lt;- as.factor(data_clean$vehicle_type)\ndata_clean$number_of_fatalities &lt;- as.numeric(data_clean$number_of_fatalities)\n\n\np &lt;- ggplot(data_clean, aes(x = vehicle_type, y = number_of_fatalities)) +\n  geom_boxplot(fill = \"lightblue\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Fatalities by Vehicle Type\", \n       x = \"Vehicle Type\", \n       y = \"Number of Fatalities\")\n\n\nggplotly(p)\n\n\n\n\n\nhis chart illustrates the distribution of fatalities by vehicle type in road accidents in Thailand from 2019 to 2022. The chart is a box plot with individual data points, where the X-axis represents different vehicle types involved in accidents (Vehicle Type), and the Y-axis represents the number of fatalities (Number of Fatalities). From the chart, we can observe the following:\n\nMost vehicle types are associated with relatively low median fatalities per accident, typically between 0 and 2 deaths.\nHowever, certain vehicle types such as vans, large trucks with trailers, and 4-wheel pickup trucks show higher maximum fatalities, with some accidents involving more than 10 deaths.\nThe spread of fatalities varies across vehicle types, indicating different levels of severity depending on the type of vehicle involved.\n\nOverall, while most accidents result in low fatality counts, specific vehicle types are linked to higher fatality risks in severe cases.\n\n\n3.7.2 Distribution of Inhuries by Vehicle Type\n\ndata_clean$vehicle_type &lt;- as.factor(data_clean$vehicle_type)\ndata_clean$number_of_injuries &lt;- as.numeric(data_clean$number_of_injuries)\n\n\np &lt;- ggplot(data_clean, aes(x = vehicle_type, y = number_of_injuries)) +\n  geom_boxplot(fill = \"lightblue\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Injuries by Vehicle Type\", \n       x = \"Vehicle Type\", \n       y = \"Number of Injuries\")\n\n\nggplotly(p)\n\n\n\n\n\nThis chart illustrates the distribution of injuries by vehicle type in road accidents in Thailand from 2019 to 2022. The chart is a box plot with individual data points, where the X-axis represents different vehicle types involved in accidents (Vehicle Type), and the Y-axis represents the number of injuries (Number of Injuries). From the chart, we can observe the following:\n\nLarge passenger vehicles and vans are associated with the highest number of injuries in some accidents, with counts reaching up to 50.\nMost other vehicle types, such as motorcycles, pickup trucks, and passenger cars, show a wide range of injury numbers, though typically under 20 injuries per accident.\nThe variability of injuries is significant across vehicle types, suggesting that injury severity greatly depends on the vehicle involved.\n\nThis chart indicates that while many accidents involve only a few injuries, vehicles designed to carry more passengers tend to be involved in accidents with higher injury counts."
  },
  {
    "objectID": "Analysis/EDA/EDA.html#prototype",
    "href": "Analysis/EDA/EDA.html#prototype",
    "title": "Exploratory Data Analysis",
    "section": "4. Prototype",
    "text": "4. Prototype\n\nThis prototype provides an interactive overview of road accidents in Thailand, categorized by time and vehicle type.\n\nThe top section displays the number of accidents by year, allowing users to filter the data by selecting a specific year or month using the dropdown menus. This helps to identify temporal patterns in road accidents.\nThe bottom section presents the number of accidents by vehicle type, showing which types of vehicles are most frequently involved in accidents. Users can interact with the filter on the right to explore data based on different factors.\n\nOverall, this dashboard offers a clear and customizable visualization of road accident trends over time and by vehicle category."
  },
  {
    "objectID": "Analysis/EDA/EDA.html#reference",
    "href": "Analysis/EDA/EDA.html#reference",
    "title": "Exploratory Data Analysis",
    "section": "5. Reference",
    "text": "5. Reference\nTake-home Exercise 3: Prototyping Modules for Visual Analytics Shiny Application\nSenior’s website"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Us",
    "section": "",
    "text": "This is the website for Group 10’s Visual Analytics Project.\nIn the vast world of data, three brave souls—well, three friends—have set out on an adventure. They may not be warriors or wizards, but they do have one powerful weapon: Visual Analytics.\nDING Hong-Yan – The data detective. With a sharp eye and a love for finding patterns, he can spot trends hiding in plain sight. If data had secrets, he’d be the one to expose them.\nKIM Jeounghyun – The artist of analytics. While others see boring numbers, he sees a chance to make charts look cool. If data could talk, his visuals would make it sing.\nLIU, Jeremy Junpeng – The code whisperer. He speaks fluent programming (and maybe a little too much R). If data were a puzzle, he’d be the guy solving it while everyone else is still reading the instructions.\nTogether, they are Group 10—on a mission to turn raw numbers into something people actually want to look at. Will they succeed? Probably. Will they drink too much coffee along the way? Definitely."
  },
  {
    "objectID": "Analysis/Predictive_Analysis/Predictive_Analysis.html#overview",
    "href": "Analysis/Predictive_Analysis/Predictive_Analysis.html#overview",
    "title": "Predictive_Analysis",
    "section": "1. Overview",
    "text": "1. Overview\nThis project focuses on analyzing road accident data in Thailand from 2019 to 2022. With thousands of incidents recorded across various provinces, weather conditions, vehicle types, and times of day, the goal is to gain meaningful insights into when and where fatal accidents are more likely to occur.\nThe analysis combines exploratory visualizations with a predictive model to understand patterns and estimate the number of fatalities under different accident scenarios. A final prototype in the form of a Shiny app was developed to allow interactive simulations of fatality risk."
  },
  {
    "objectID": "Analysis/Predictive_Analysis/Predictive_Analysis.html#objective",
    "href": "Analysis/Predictive_Analysis/Predictive_Analysis.html#objective",
    "title": "Predictive_Analysis",
    "section": "2. Objective",
    "text": "2. Objective\nThe main objective of this exercise is to build a standalone predictive module that takes user input — such as location, time, weather, and vehicle type — and returns an estimate of the expected number of fatalities using Poisson regression.\nIn addition, the project aims to:\n\nExplore temporal and regional patterns of accidents using visual analytics\nIdentify high-risk vehicle types and conditions\nDevelop a user-friendly interface to simulate and visualize fatality predictions"
  },
  {
    "objectID": "Analysis/Predictive_Analysis/Predictive_Analysis.html#data-preparation",
    "href": "Analysis/Predictive_Analysis/Predictive_Analysis.html#data-preparation",
    "title": "Predictive_Analysis",
    "section": "3. Data Preparation",
    "text": "3. Data Preparation\nUsed the following R packages in this project and loaded them using the pacman::p_load() function for convenience:\n\nshiny: For building interactive web applications.\ntidyverse: A collection of packages for data wrangling and visualization, including dplyr, ggplot2, and readr.\nleaflet: To build interactive geospatial heatmaps for province-level accident data.\n\n\n3.2 Data Source\nThe dataset was originally collected from Kaggle, which compiles official accident data released by Thai government agencies. It contains accident records between 2019 and 2022, including variables such as:\n\nprovince_en: Province where the accident occurred\n\n\n\nvehicle_type: Type of vehicle involved\nweather_condition: Weather at the time of the accident\nincident_datetime: Timestamp of the incident\nnumber_of_vehicles_involved: Total number of vehicles\nnumber_of_fatalities: Fatalities resulting from the accident\n\n\n\n3.3 Data Overview & Pre-processing\n\n3.3.1Import Data\n\naccident_data &lt;- read_csv(\"data/thai_road_accident_2019_2022.csv\", show_col_types = FALSE)\n\n\n\n3.3.2 Data Overview\nThis output from glimpse(accident_data) provides a summary of the dataset’s structure, offering an overview of the number of rows, columns, and the types of variables included.\n\nglimpse(accident_data)\n\nRows: 81,735\nColumns: 18\n$ acc_code                    &lt;dbl&gt; 571905, 3790870, 599075, 571924, 599523, 5…\n$ incident_datetime           &lt;dttm&gt; 2019-01-01 00:00:00, 2019-01-01 00:03:00,…\n$ report_datetime             &lt;dttm&gt; 2019-01-02 06:11:00, 2020-02-20 13:48:00,…\n$ province_th                 &lt;chr&gt; \"ลพบุรี\", \"อุบลราชธานี\", \"ประจวบคีรีขันธ์\", \"เชียงใ…\n$ province_en                 &lt;chr&gt; \"Loburi\", \"Ubon Ratchathani\", \"Prachuap Kh…\n$ agency                      &lt;chr&gt; \"department of rural roads\", \"department o…\n$ route                       &lt;chr&gt; \"แยกทางหลวงหมายเลข 21 (กม.ที่ 31+000) - บ้านวั…\n$ vehicle_type                &lt;chr&gt; \"motorcycle\", \"private/passenger car\", \"mo…\n$ presumed_cause              &lt;chr&gt; \"driving under the influence of alcohol\", …\n$ accident_type               &lt;chr&gt; \"other\", \"rollover/fallen on straight road…\n$ number_of_vehicles_involved &lt;dbl&gt; 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, …\n$ number_of_fatalities        &lt;dbl&gt; 0, 0, 1, 0, 0, 0, 0, 1, 3, 0, 0, 1, 0, 0, …\n$ number_of_injuries          &lt;dbl&gt; 2, 2, 0, 1, 0, 2, 2, 0, 0, 1, 1, 0, 1, 1, …\n$ weather_condition           &lt;chr&gt; \"clear\", \"clear\", \"clear\", \"clear\", \"clear…\n$ latitude                    &lt;dbl&gt; 14.959105, 15.210738, 12.374259, 18.601721…\n$ longitude                   &lt;dbl&gt; 100.87346, 104.86269, 99.90795, 98.80420, …\n$ road_description            &lt;chr&gt; \"straight road\", \"straight road\", \"wide cu…\n$ slope_description           &lt;chr&gt; \"no slope\", \"no slope\", \"slope area\", \"no …\n\n\n\n\n\n3.2 Pre-processing\n\naccident_data &lt;- read_csv(\"data/thai_road_accident_2019_2022.csv\", show_col_types = FALSE) %&gt;%\n  mutate(\n    incident_datetime = as.POSIXct(incident_datetime),\n    day_of_week = weekdays(incident_datetime),\n    hour = as.integer(format(incident_datetime, \"%H\"))\n  ) %&gt;%\n  drop_na(number_of_fatalities, province_en, vehicle_type,\n          weather_condition, number_of_vehicles_involved,\n          day_of_week, hour) %&gt;%\n  mutate(\n    province_en = factor(province_en),\n    vehicle_type = factor(vehicle_type),\n    weather_condition = factor(weather_condition),\n    day_of_week = factor(day_of_week)\n  )\n\nI converted the timestamp to POSIXct format and extracted day_of_week and hour for temporal analysis. Then, I removed rows with missing values in key variables and converted categorical fields to factors for modeling compatibility."
  },
  {
    "objectID": "Analysis/Predictive_Analysis/Predictive_Analysis.html#thailand-road-accidents-visual-exploration-and-predictive-modeling-1",
    "href": "Analysis/Predictive_Analysis/Predictive_Analysis.html#thailand-road-accidents-visual-exploration-and-predictive-modeling-1",
    "title": "Predictive_Analysis",
    "section": "4. Thailand Road Accidents: Visual Exploration and Predictive Modeling",
    "text": "4. Thailand Road Accidents: Visual Exploration and Predictive Modeling\n\n4.1 Heatmap of Average Fatalities by Province\nTo explore the geographic distribution of road accident severity, I created a heatmap that visualizes the average number of fatalities per province in Thailand. This visualization helps highlight provinces with higher fatality rates, allowing for better understanding of regional accident patterns.\nThe heatmap was built using the leaflet package. Provinces are represented by circular markers, where:\n\nRadius indicates the magnitude of average fatalities (larger circle = higher fatality).\nColor intensity (from light to dark red) represents the severity.\nInteractive popups provide province names and average fatality values.\n\n\n4.1.1 Step 1: Prepare Summary Data with Coordinates\n\n#Calculate average fatalities per province\nprovince_summary &lt;- accident_data %&gt;%\n  group_by(province_en) %&gt;%\n  summarise(\n    avg_fatalities = mean(number_of_fatalities),\n    .groups = \"drop\"\n  ) %&gt;%\n  # Add lat/lon for each province\n  mutate(\n    lat = case_when(\n      province_en == \"Bangkok\" ~ 13.7563,\n      province_en == \"Chiang Mai\" ~ 18.7883,\n      province_en == \"Phuket\" ~ 7.8804,\n      province_en == \"Udon Thani\" ~ 17.4138,\n      province_en == \"Khon Kaen\" ~ 16.4419,\n      province_en == \"Nakhon Ratchasima\" ~ 14.9799,\n      province_en == \"Chon Buri\" ~ 13.3611,\n      province_en == \"Songkhla\" ~ 7.1897,\n      TRUE ~ NA_real_\n    ),\n    lon = case_when(\n      province_en == \"Bangkok\" ~ 100.5018,\n      province_en == \"Chiang Mai\" ~ 98.9853,\n      province_en == \"Phuket\" ~ 98.3923,\n      province_en == \"Udon Thani\" ~ 102.7859,\n      province_en == \"Khon Kaen\" ~ 102.8350,\n      province_en == \"Nakhon Ratchasima\" ~ 102.0977,\n      province_en == \"Chon Buri\" ~ 100.9847,\n      province_en == \"Songkhla\" ~ 100.5954,\n      TRUE ~ NA_real_\n    )\n  ) %&gt;%\n  drop_na(lat, lon) \n\nIn this step, I calculated the mean number of fatalities per province and manually assigned latitude and longitude values for selected provinces. This allowed accurate placement of markers on the map.\n\n\n4.1.2 Step 2: Create Interactive Heatmap\n\npal &lt;- colorNumeric(\n  palette = \"Reds\",\n  domain = province_summary$avg_fatalities\n)\n\n# visualization\nleaflet(province_summary) %&gt;%\n  addTiles() %&gt;%\n  addCircleMarkers(\n    ~lon, ~lat,\n    radius = ~sqrt(avg_fatalities) * 50,\n    color = ~pal(avg_fatalities),\n    stroke = FALSE,\n    fillOpacity = 0.8,\n    popup = ~paste0(\n      \"&lt;strong&gt;\", province_en, \"&lt;/strong&gt;&lt;br&gt;\",\n      \"Avg Fatalities: \", round(avg_fatalities, 2)\n    )\n  ) %&gt;%\n  addLegend(\n    \"bottomright\",\n    pal = pal,\n    values = ~avg_fatalities,\n    title = \"Avg Fatalities\",\n    opacity = 1\n  )\n\n\n\n\n\n\n\n\n4.2 Average Fatalities by Day of Week\nTo verify potential temporal patterns in road fatalities, I plotted the average fatalities by day of the week. The graph shows if weekends or weekdays are more prone to fatal accidents. \n\nThe chart below shows that Sunday and Saturday have relatively higher average fatalities, which suggests heightened danger during weekends—likely due to higher traffic volume or longer travel distance during leisure times.\n\naccident_data &lt;- accident_data %&gt;%\n  mutate(\n    incident_datetime = as.POSIXct(incident_datetime),\n    day_of_week = weekdays(incident_datetime),\n    hour = as.integer(format(incident_datetime, \"%H\"))\n  ) %&gt;%\n  drop_na(number_of_fatalities, province_en, vehicle_type,\n          weather_condition, number_of_vehicles_involved,\n          day_of_week, hour)\n\n#Average Fatalities by Day of Week\naccident_data %&gt;%\n  group_by(day_of_week) %&gt;%\n  summarise(avg_fatalities = mean(number_of_fatalities), .groups = \"drop\") %&gt;%\n  ggplot(aes(x = day_of_week, y = avg_fatalities, fill = day_of_week)) +\n  geom_col(width = 0.7, show.legend = FALSE) +\n  labs(title = \"Average Fatalities by Day of Week\",\n       x = \"Day of Week\", y = \"Average Fatalities\") +\n  theme_minimal(base_size = 14)\n\n\n\n\n\n\n\n\n\n\n4.3 Average Fatalities by Hour and Day\nThis line plot shows how the average number of fatalities varies throughout the day for each day of the week. By incorporating both dayof week and hour of day, the graph shows temporal patterns that canbe linked to traffic volume, human activity, or enforcement time of regulations.\nWe can observe two main peaks in the evening (around 18:00 to 21:00), especially on weekends, which may reflect higher accident risk due to increased social activity or tiredness. Early morning hours also show relatively higher fatalities on certain days.\n\naccident_data %&gt;%\n  group_by(day_of_week, hour) %&gt;%\n  summarise(avg_fatalities = mean(number_of_fatalities), .groups = \"drop\") %&gt;%\n  ggplot(aes(x = hour, y = avg_fatalities, color = day_of_week)) +\n  geom_line(size = 1) +\n  labs(\n    title = \"Average Fatalities by Hour and Day\",\n    x = \"Hour of Day\",\n    y = \"Average Fatalities\"\n  ) +\n  theme_minimal(base_size = 14)\n\n\n\n\n\n\n\n\n\n\n4.4 Average Fatalities by Road User Type\nThis chart shows the average number of fatalities per crash by roaduser type. By examining which groups have more fatalities, we can determine vulnerable road user groups and direct safety measures.\nThe following bar chart shows the top 10 vehicle types (including pedestrians) with the highest average fatalities. Notably, pedestrians and bicycle crashes are among the most fatal on average.\n\naccident_data %&gt;%\n  group_by(vehicle_type) %&gt;%\n  summarise(avg_fatalities = mean(number_of_fatalities), .groups = \"drop\") %&gt;%\n  slice_max(avg_fatalities, n = 10) %&gt;%  # Select top 10 for better readability\n  ggplot(aes(x = reorder(vehicle_type, avg_fatalities), y = avg_fatalities, fill = vehicle_type)) +\n  geom_col(width = 0.7, show.legend = FALSE) +\n  coord_flip() +\n  labs(\n    title = \"Average Fatalities by Road User Type\",\n    x = \"Vehicle Type\",\n    y = \"Average Fatalities\"\n  ) +\n  theme_minimal(base_size = 14)\n\n\n\n\n\n\n\n\n\n\n4.5 Predictive Modeling using Poisson Regression\nThis part builds a predictive model based on Poisson regressionsuitable for count target variables like the number of fatalities. It trains the model on significant accident variables to estimate expected fatalities in a given situation.\n\n# Load dataset and preprocess\naccident_data &lt;- read_csv(\"data/thai_road_accident_2019_2022.csv\", show_col_types = FALSE) %&gt;%\n  mutate(\n    incident_datetime = as.POSIXct(incident_datetime),\n    day_of_week = weekdays(incident_datetime),\n    hour = as.integer(format(incident_datetime, \"%H\"))\n  ) %&gt;%\n  drop_na(number_of_fatalities, province_en, vehicle_type,\n          weather_condition, number_of_vehicles_involved,\n          day_of_week, hour) %&gt;%\n  mutate(\n    province_en = factor(province_en),\n    vehicle_type = factor(vehicle_type),\n    weather_condition = factor(weather_condition),\n    day_of_week = factor(day_of_week)\n  )\n\n\n4.5.1 Train Model\nTo estimate the number of fatalities, I trained a Poisson regression model using the glm() function. The target variable is number_of_fatalities, and the predictors include location, vehicle type, weather, time, and number of vehicles involved.\n\nmodel &lt;- glm(number_of_fatalities ~ province_en + vehicle_type +\n               weather_condition + day_of_week + hour + number_of_vehicles_involved,\n             family = poisson(), data = accident_data)\n\n\n\n4.5.2 Scenario Prediction and Interpretation\nA hypothetical accident scenario is created using the following values:\n\nProvince: Bangkok\nVehicle Type: Private/Passenger Car\nWeather: Clear\nDay: Monday\nHour: 14\nNumber of Vehicles Involved: 2\n\n\nnewdata &lt;- data.frame(\n  province_en = factor(\"Bangkok\", levels = levels(accident_data$province_en)),\n  vehicle_type = factor(\"private/passenger car\", levels = levels(accident_data$vehicle_type)),\n  weather_condition = factor(\"clear\", levels = levels(accident_data$weather_condition)),\n  day_of_week = factor(\"Monday\", levels = levels(accident_data$day_of_week)),\n  hour = 14,\n  number_of_vehicles_involved = 2\n)\n\npred &lt;- predict(model, newdata = newdata, type = \"response\")\navg_pred &lt;- mean(predict(model, type = \"response\"), na.rm = TRUE)\n\ncomparison &lt;- ifelse(pred &gt; avg_pred, \"higher than\", \"lower than\")\nsummary_text &lt;- paste0(\"Predicted: \", round(pred, 3),\n                       \" (\", comparison, \" avg: \", round(avg_pred, 3), \")\")\nsummary_text\n\n[1] \"Predicted: 0.017 (lower than avg: 0.146)\"\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe model returns an estimated fatality count for the defined scenario and compares it with the overall average. The result allows the user to understand whether this scenario poses a higher or lower risk compared to typical cases.\n\n\n\n\n4.5.3 Visualizing the Prediction\nThe chart below compares the predicted value for the given scenario against the overall average:\n\nbar_data &lt;- tibble(\n  Scenario = c(\"This Scenario\", \"Overall Avg\"),\n  Value = c(pred, avg_pred)\n)\n\nggplot(bar_data, aes(x = Scenario, y = Value, fill = Scenario)) +\n  geom_col(width = 0.5) +\n  labs(title = \"Fatality Prediction vs Overall Average\",\n       y = \"Estimated Fatalities\", x = NULL) +\n  theme_minimal(base_size = 14) +\n  scale_fill_manual(values = c(\"This Scenario\" = \"firebrick\", \"Overall Avg\" = \"gray\")) +\n  ylim(0, max(1, pred, avg_pred) * 1.2)\n\n\n\n\n\n\n\n\nThe model estimates approximately 0.017 fatalities for this situation, which is lower than the overall average of 0.146 across all accidents.\nThis suggests that the specified conditions (time, location, weather, and vehicle type) are relatively less severe compared to other combinations observed in the dataset. It demonstrates the model’s capability to provide data-driven risk estimation under customized inputs."
  },
  {
    "objectID": "Analysis/Predictive_Analysis/Predictive_Analysis.html#key-takeaways",
    "href": "Analysis/Predictive_Analysis/Predictive_Analysis.html#key-takeaways",
    "title": "Predictive_Analysis",
    "section": "5. Key Takeaways",
    "text": "5. Key Takeaways\n\nPredictive model provides interpretable results based on user input\nVisual context improves understanding of scenario-based risks\nShiny allows for fast prototyping and feedback-driven development"
  },
  {
    "objectID": "Analysis/Predictive_Analysis/Predictive_Analysis.html#future-work",
    "href": "Analysis/Predictive_Analysis/Predictive_Analysis.html#future-work",
    "title": "Predictive_Analysis",
    "section": "6. Future Work",
    "text": "6. Future Work\n\nIntegrate module into full team project\nExtend model to include severity levels or accident types\nRefine geospatial accuracy for heatmap with real coordinates"
  },
  {
    "objectID": "Analysis/Predictive_Analysis/Predictive_Analysis.html#prototype-design-shiny-app-predictive-analysis-module",
    "href": "Analysis/Predictive_Analysis/Predictive_Analysis.html#prototype-design-shiny-app-predictive-analysis-module",
    "title": "Predictive_Analysis",
    "section": "7. Prototype Design (Shiny App – Predictive Analysis Module)",
    "text": "7. Prototype Design (Shiny App – Predictive Analysis Module)\nThis Shiny application provides an interactive interface for users to estimate the expected number of fatalities under different traffic accident scenarios using a trained Poisson regression model.\nThe following R packages from CRAN are required to build and run this Shiny application module:\n\nshiny: For building the interactive web application\ntidyverse: A collection of packages used for data manipulation and visualization, including dplyr, ggplot2, and readr\n\nAll packages are supported by CRAN and can be installed via:\n\n\n\n\n\n\nNote\n\n\n\ninstall.packages(c(“shiny”, “tidyverse”))\n\n\n\nInputs\n\nProvince\nVehicle Type\nWeather Condition\nDay of Week\nHour\nNumber of Vehicles Involved\n\n\n\nOutputs\n\nPredicted fatality count\nRisk summary text (relative to overall average)\nBar chart: predicted value vs. overall average"
  },
  {
    "objectID": "Analysis/Predictive_Analysis/Predictive_Analysis.html#appendix",
    "href": "Analysis/Predictive_Analysis/Predictive_Analysis.html#appendix",
    "title": "Predictive_Analysis",
    "section": "8. Appendix",
    "text": "8. Appendix\n\nReference Dashboards and Storyboards\n\nStoryboard Example – Airline Stock Market Analysis\nPredictive Modeling – Road Accidents in Tanzania\nISSS608 Visual Analytics Project Gallery (AY2024/25 Jan)"
  },
  {
    "objectID": "Music.html#thank-you-professor-kam-ai-generated-content-d",
    "href": "Music.html#thank-you-professor-kam-ai-generated-content-d",
    "title": "🎵 Thank You, Professor Kam",
    "section": "",
    "text": "【Verse 1】\nI still remember the first time, staring at that chart\nLines and colors spoke, like data from the heart\nYou said, “Let the numbers tell their story true”\nAnd the world looked clearer, all because of you\n【Verse 2】\nEvery meeting, you showed us patient care\nEven when we struggled, you were always there\nSketching plots while guiding us through\nOur scattered thoughts found direction too\n【Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the maze of data, you helped us not to stray\nEach chart we make holds meaning deep and strong\nYou taught us how to see what’s been there all along\nThank you, Professor Kam, for showing us the art\nOf telling silent stories with a thoughtful heart\nIn every graph, your kindness shines within\nA gentle guide, through thick and thin\n【Verse 3】\nFrom bar charts to heatmaps’ colored gleam\nFrom timelines to maps, and everything in between\nYou taught not just the tools, but the “why”\nHow to let the data speak, and not just pass by\n【Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the maze of data, you helped us not to stray\nEach chart we make holds meaning deep and strong\nYou taught us how to see what’s been there all along\nThank you, Professor Kam, for showing us the art\nOf telling silent stories with a thoughtful heart\nIn every graph, your kindness shines within\nA gentle guide, through thick and thin\n【Bridge】\nThe road ahead is long, but we’ll always keep\nThe moments we shared, the lessons so deep\nYou gave us not just knowledge, but belief\nA strength that carries us past doubt and grief\n(But please don’t call me crying late at night…\nMy wife might think I’ve got a secret side)\n【Final Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the world of data, you helped us find our say\nEach thoughtful plot, each story we refine\nIs a trace of your heart, forever intertwined"
  },
  {
    "objectID": "music.html",
    "href": "music.html",
    "title": "🎵 Thank You, Professor Kam",
    "section": "",
    "text": "【Verse 1】\nI still remember the first time, staring at that chart\nLines and colors spoke, like data from the heart\nYou said, “Let the numbers tell their story true”\nAnd the world looked clearer, all because of you\n【Verse 2】\nEvery meeting, you showed us patient care\nEven when we struggled, you were always there\nSketching plots while guiding us through\nOur scattered thoughts found direction too\n【Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the maze of data, you helped us not to stray\nEach chart we make holds meaning deep and strong\nYou taught us how to see what’s been there all along\nThank you, Professor Kam, for showing us the art\nOf telling silent stories with a thoughtful heart\nIn every graph, your kindness shines within\nA gentle guide, through thick and thin\n【Verse 3】\nFrom bar charts to heatmaps’ colored gleam\nFrom timelines to maps, and everything in between\nYou taught not just the tools, but the “why”\nHow to let the data speak, and not just pass by\n【Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the maze of data, you helped us not to stray\nEach chart we make holds meaning deep and strong\nYou taught us how to see what’s been there all along\nThank you, Professor Kam, for showing us the art\nOf telling silent stories with a thoughtful heart\nIn every graph, your kindness shines within\nA gentle guide, through thick and thin\n【Bridge】\nThe road ahead is long, but we’ll always keep\nThe moments we shared, the lessons so deep\nYou gave us not just knowledge, but belief\nA strength that carries us past doubt and grief\n(But please don’t call me crying late at night…\nMy wife might think I’ve got a secret side)\n【Final Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the world of data, you helped us find our say\nEach thoughtful plot, each story we refine\nIs a trace of your heart, forever intertwined"
  },
  {
    "objectID": "music.html#thank-you-professor-kam-ai-generated-content-d",
    "href": "music.html#thank-you-professor-kam-ai-generated-content-d",
    "title": "🎵 Thank You, Professor Kam",
    "section": "",
    "text": "【Verse 1】\nI still remember the first time, staring at that chart\nLines and colors spoke, like data from the heart\nYou said, “Let the numbers tell their story true”\nAnd the world looked clearer, all because of you\n【Verse 2】\nEvery meeting, you showed us patient care\nEven when we struggled, you were always there\nSketching plots while guiding us through\nOur scattered thoughts found direction too\n【Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the maze of data, you helped us not to stray\nEach chart we make holds meaning deep and strong\nYou taught us how to see what’s been there all along\nThank you, Professor Kam, for showing us the art\nOf telling silent stories with a thoughtful heart\nIn every graph, your kindness shines within\nA gentle guide, through thick and thin\n【Verse 3】\nFrom bar charts to heatmaps’ colored gleam\nFrom timelines to maps, and everything in between\nYou taught not just the tools, but the “why”\nHow to let the data speak, and not just pass by\n【Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the maze of data, you helped us not to stray\nEach chart we make holds meaning deep and strong\nYou taught us how to see what’s been there all along\nThank you, Professor Kam, for showing us the art\nOf telling silent stories with a thoughtful heart\nIn every graph, your kindness shines within\nA gentle guide, through thick and thin\n【Bridge】\nThe road ahead is long, but we’ll always keep\nThe moments we shared, the lessons so deep\nYou gave us not just knowledge, but belief\nA strength that carries us past doubt and grief\n(But please don’t call me crying late at night…\nMy wife might think I’ve got a secret side)\n【Final Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the world of data, you helped us find our say\nEach thoughtful plot, each story we refine\nIs a trace of your heart, forever intertwined"
  },
  {
    "objectID": "SongforProf.html",
    "href": "SongforProf.html",
    "title": "🎵 Thank You, Professor Kam",
    "section": "",
    "text": "【Verse 1】\nI still remember the first time, staring at that chart\nLines and colors spoke, like data from the heart\nYou said, “Let the numbers tell their story true”\nAnd the world looked clearer, all because of you\n【Verse 2】\nEvery meeting, you showed us patient care\nEven when we struggled, you were always there\nSketching plots while guiding us through\nOur scattered thoughts found direction too\n【Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the maze of data, you helped us not to stray\nEach chart we make holds meaning deep and strong\nYou taught us how to see what’s been there all along\nThank you, Professor Kam, for showing us the art\nOf telling silent stories with a thoughtful heart\nIn every graph, your kindness shines within\nA gentle guide, through thick and thin\n【Verse 3】\nFrom bar charts to heatmaps’ colored gleam\nFrom timelines to maps, and everything in between\nYou taught not just the tools, but the “why”\nHow to let the data speak, and not just pass by\n【Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the maze of data, you helped us not to stray\nEach chart we make holds meaning deep and strong\nYou taught us how to see what’s been there all along\nThank you, Professor Kam, for showing us the art\nOf telling silent stories with a thoughtful heart\nIn every graph, your kindness shines within\nA gentle guide, through thick and thin\n【Bridge】\nThe road ahead is long, but we’ll always keep\nThe moments we shared, the lessons so deep\nYou gave us not just knowledge, but belief\nA strength that carries us past doubt and grief\n(But please don’t call me crying late at night…\nMy wife might think I’ve got a secret side)\n【Final Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the world of data, you helped us find our say\nEach thoughtful plot, each story we refine\nIs a trace of your heart, forever intertwined"
  },
  {
    "objectID": "SongforProf.html#thank-you-professor-kam-ai-generated-content-d",
    "href": "SongforProf.html#thank-you-professor-kam-ai-generated-content-d",
    "title": "🎵 Thank You, Professor Kam",
    "section": "",
    "text": "【Verse 1】\nI still remember the first time, staring at that chart\nLines and colors spoke, like data from the heart\nYou said, “Let the numbers tell their story true”\nAnd the world looked clearer, all because of you\n【Verse 2】\nEvery meeting, you showed us patient care\nEven when we struggled, you were always there\nSketching plots while guiding us through\nOur scattered thoughts found direction too\n【Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the maze of data, you helped us not to stray\nEach chart we make holds meaning deep and strong\nYou taught us how to see what’s been there all along\nThank you, Professor Kam, for showing us the art\nOf telling silent stories with a thoughtful heart\nIn every graph, your kindness shines within\nA gentle guide, through thick and thin\n【Verse 3】\nFrom bar charts to heatmaps’ colored gleam\nFrom timelines to maps, and everything in between\nYou taught not just the tools, but the “why”\nHow to let the data speak, and not just pass by\n【Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the maze of data, you helped us not to stray\nEach chart we make holds meaning deep and strong\nYou taught us how to see what’s been there all along\nThank you, Professor Kam, for showing us the art\nOf telling silent stories with a thoughtful heart\nIn every graph, your kindness shines within\nA gentle guide, through thick and thin\n【Bridge】\nThe road ahead is long, but we’ll always keep\nThe moments we shared, the lessons so deep\nYou gave us not just knowledge, but belief\nA strength that carries us past doubt and grief\n(But please don’t call me crying late at night…\nMy wife might think I’ve got a secret side)\n【Final Chorus】\nThank you, Professor Kam, for lighting up our way\nIn the world of data, you helped us find our say\nEach thoughtful plot, each story we refine\nIs a trace of your heart, forever intertwined"
  }
]